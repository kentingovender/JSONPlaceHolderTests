{
	"info": {
		"_postman_id": "622958ce-aee0-4157-8589-9eeb22a34698",
		"name": "JsonPlaceholderApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "14998348"
	},
	"item": [
		{
			"name": "Retrieve all comments",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be an array\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Each comment should have an id, postId, name, email, and body\", function () {\r",
							"    pm.response.json().forEach(function (comment) {\r",
							"        pm.expect(comment).to.have.all.keys('id', 'postId', 'name', 'email', 'body');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://jsonplaceholder.typicode.com/comments"
			},
			"response": []
		},
		{
			"name": "Retrieve a single comment",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be an object\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have an id, postId, name, email, and body\", function () {\r",
							"    var comment = pm.response.json();\r",
							"    pm.expect(comment).to.have.all.keys('id', 'postId', 'name', 'email', 'body');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://jsonplaceholder.typicode.com/comments/{{commentId}}"
			},
			"response": []
		},
		{
			"name": "Create a new comment",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be an object\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have an id, postId, name, email, and body\", function () {\r",
							"    var comment = pm.response.json();\r",
							"    pm.expect(comment).to.have.all.keys('id', 'postId', 'name', 'email', 'body');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"postId\": 1,\r\n  \"name\": \"John Doe\",\r\n  \"email\": \"JohnDoe@gmail.com\",\r\n  \"body\": \"This is a new comment.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://jsonplaceholder.typicode.com/comments"
			},
			"response": []
		},
		{
			"name": "Update a comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be an object\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have an id, postId, name, email, and body\", function () {\r",
							"    var comment = pm.response.json();\r",
							"    pm.expect(comment).to.have.all.keys('id', 'postId', 'name', 'email', 'body');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"postId\": 1,\r\n  \"name\": \"Jane Doe\",\r\n  \"email\": \"JaneDoe@gmail.com\",\r\n  \"body\": \"This is an updated comment.\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://jsonplaceholder.typicode.com/comments/501"
			},
			"response": []
		},
		{
			"name": "Partially update a comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be an object\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have an id, postId, name, email, and body\", function () {\r",
							"    var comment = pm.response.json();\r",
							"    pm.expect(comment).to.have.all.keys('body');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"body\": \"This is a partially updated comment.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://jsonplaceholder.typicode.com/comments/501"
			},
			"response": []
		},
		{
			"name": "Delete a comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be empty\", function () {\r",
							"    pm.expect(pm.response.text()).to.be.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "https://jsonplaceholder.typicode.com/comments/501"
			},
			"response": []
		}
	]
}